
CREATE TABLE stores (
    store_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    location VARCHAR2(255)
);

CREATE TABLE products (
    product_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    price NUMBER(10,2) NOT NULL
);

CREATE TABLE stock (
    stock_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id NUMBER,
    product_id NUMBER,
    quantity NUMBER CHECK (quantity >= 0),
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (store_id) REFERENCES stores(store_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id)ON DELETE CASCADE
);

CREATE TABLE stock_movements (
    movement_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id NUMBER,
    product_id NUMBER,
    quantity NUMBER NOT NULL,
    movement_type VARCHAR2(50) CHECK (movement_type IN ('STOCK_IN', 'SALE', 'MANUAL_REMOVE')),
    movement_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   FOREIGN KEY (store_id) REFERENCES stores(store_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);

CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(100) UNIQUE NOT NULL,
    password_hash VARCHAR2(255) NOT NULL
);

CREATE TABLE audit_logs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    action_type VARCHAR2(50) NOT NULL CHECK (action_type IN ('STOCK_IN', 'SALE', 'MANUAL_REMOVE')),
    stock_id NUMBER,
    store_id NUMBER,
    product_id NUMBER,
    quantity NUMBER,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (stock_id) REFERENCES stock(stock_id) ON DELETE SET NULL,
    FOREIGN KEY (store_id) REFERENCES stores(store_id) ON DELETE SET NULL,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE SET NULL
);












